#!/bin/bash

set -euo pipefail

##
#/
#/ Makes it possible to execute a shell in a different directory
#/ without holding the directory open (e.g. preventing from unmounting it).
#/
#/ Usage:
#/
#/   @PROGRAM@ [OPTIONS] [-- OPTIONS to pass to SHELL]
#/
#/   Options:
#/
#/      -C <directory>    Change current directory to the directory specified
#/
##

SHELL="bash"
CYAN='\033[1;36m'
NO_COLOUR='\033[0m'

where_am_i="${0%/*}"
source "${where_am_i}/common"

location="${PWD}"
while [ $# -gt 0 ]; do
  case "$1" in
    (-h | --help)
      usage
      ;;
    (-l | --location)
      shift;
      location="${1}" ||
        usage "No location passed"
      shift;
      ;;
    (--)
      shift;
      # Pass everything after -- to SHELL
      break;
      ;;
    (*)
      usage "Unsupported option: '${1}'"
      ;;
  esac
done

[[ -n "${location:-}" ]] ||
    usage

[[ -d "${location}" ]] || {
    echo "Directory specified does not exist: '${location}'"
    exit 1
}

[[ ${VCLI_IN_SHELL:-0} -eq 0 ]] ||
  die "Already in a shell."
export VCLI_IN_SHELL=1

cd "${location}"

PS1_VALUE="${CYAN}${PS1}${NO_COLOUR}"

# Not using the bash login option -l since we want to override PS1.

exec "$SHELL" --init-file <(echo "source ~/.bashrc; PS1='${PS1_VALUE}'") "$@"
